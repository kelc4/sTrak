import React, { Component } from 'react';
import { AppRegistry, Text, View, StyleSheet, Dimensions, TextInput, TouchableHighlight, Image, ImageBackground, ScrollView } from 'react-native';
import Constants from 'expo-constants';

let deviceHeight = Dimensions.get('window').height;
let deviceWidth = Dimensions.get('window').width;

export default class App extends Component {
    state = {
        iPhoneScreenPageDisplay: 'block',
        loginPageDisplay: 'none',
        topNavbarPageDisplay: 'none',
        header: ['May 1, 2020', 'Schedule', 'Team', 'Stats'],
        index: 0,
        
        gamePageDisplay: 'none',
        schedulePageDisplay: 'none',
        teamPageDisplay: 'none',
        rosterPulldownDisplay: 'none',
        statsPageDisplay: 'none',
        playerStatsPageDisplay: 'none',
        myProfilePageDisplay: 'none',
        
        bottomNavbarPageDisplay: 'none',
        
        
        username: 'Username or Email',
        password: 'Password',
        
        homeTeam: 'Home',
        awayTeam: 'Away',
        homeScore: 0,
        awayScore: 0,
        
        currPasses: 0,
        recordPasses: 0,
        goalFrom: 'Scorer',
        goalTo: 'Assist',
        fouler: 'Player',
        fouled: 0,
        
        statsIndex: 0,
        
        teamStats: [0, 0, 0],
        totalGoalsFor: 0,
        totalGoalsAgainst: 0,
        
        roster: [
            {
                name: 'I. Viktor', 
                num: 1,
                position: 'Goalkeeper',
                picture: 'https://lh3.googleusercontent.com/proxy/n2WSykVuEnWyy_4F72Q5PjB_16SrlI_Qd9psE7FjcXC4KSqgyyD8Y74s5NUUzUdvS5hatWKuxZdkfyLtd14fJwvPAqT7KsgtMOvvVuXbpFeZYA',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 0,
            },
            {
                name: 'G. Bergomi', 
                num: 2,
                position: 'Right-Back',
                picture: 'https://alchetron.com/cdn/giuseppe-bergomi-0f6c9ed1-9c40-4397-9953-776cebb642c-resize-750.jpeg',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 1,
                
            },
            {
                name: 'P. Kimpembe', 
                num: 3,
                position: 'Centre-Back',
                picture: 'https://tmssl.akamaized.net/images/portrait/originals/282041-1448017427.jpg',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 2,
                
            },
            {
                name: 'I. Rakitić', 
                num: 4,
                position: 'Central Midfield',
                picture: 'https://www3.pictures.zimbio.com/gi/Barcelona+Training+Press+Conference+2LL2zK4PyYDx.jpg',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 3,
                
            },
            {
                name: 'F. Beckenbauer',
                num: 5,
                position: 'Sweeper',
                picture: 'https://tmssl.akamaized.net/images/portrait/originals/72347-1578998783.jpg',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 4,
            },
            {
                name: 'Player 6', 
                num: 6,
                position: 'Left Fullback',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 5,
            },
            {
                name: 'C. Ronaldo',
                num: 7,
                position: 'Striker',
                picture: 'https://media3.s-nbcnews.com/i/streams/2014/June/140620/1D274906170327-ss-140619-hot-world-cup-tease-2.jpg',
                goals: 20,
                assists: 10,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 6,
            },
            {
                name: 'Player 8', 
                num: 8,
                position: 'Right Fullback',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 30,
                index: 7,
            },
            {
                name: 'Player 9', 
                num: 9,
                position: 'Striker',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 20,
                index: 8,
            },
            {
                name: 'Player 10', 
                num: 10,
                position: 'Left Winger',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 9,
            },
            {
                name: 'Player 11', 
                num: 11,
                position: 'Right Winger',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 10,
            },
            {
                name: 'Player 12', 
                num: 12,
                position: 'Holding Midfield',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 50,
                index: 11,
            },
            {
                name: 'Player 13', 
                num: 13,
                position: 'Striker',
                picture: 'https://logodix.com/logo/1984127.png',
                goals: 0,
                assists: 1,
                yellowCard: 0,
                redCard: 0,
                playtime: 90,
                index: 12,
            },
            
        ],
        
        games: [
            {
                opp: 'VanU',
                date: 'Mar 21',
                time: '14:00-16:00',
                location: 'U-Hill Secondary',
                home: 5,
                away: 0,
                result: 'W',
            },
            {
                opp: 'CAUFC',
                date: 'Mar 28',
                time: '10:00-14:00',
                location: 'BLW #4',
                home: 2,
                away: 3,
                result: 'L',
            },
            {
                opp: 'AYSC',
                date: 'Apr 25',
                time: '12:00-14:00',
                location: 'Aldergrove Park',
                home: 3,
                away: 3,
                result: 'T',
            },
            {
                opp: 'CMFSC',
                date: 'May   1',
                time: '14:00-16:00',
                location: 'Charles Best ',
                home: 0,
                away: 0,
                result: 'Cancelled'
            },
            {
                opp: 'BGSC',
                date: 'May   8',
                time: '14:30-16:30',
                location: 'TBA',
                home: 0,
                away: 0,
                result: 'Cancelled'
            },
            {
                opp: 'RFC',
                date: 'May 15',
                time: '16:00-18:00',
                location: 'TBA',
                home: 0,
                away: 0,
                result: 'Cancelled'
            },
            {
                opp: 'PCEFC',
                date: 'May 22',
                time: '08:00-10:00',
                location: 'TBA',
                home: 0,
                away: 0,
                result: 'Cancelled'
            }
            
        ],
        
        
        
    }
    
    iconPagePress = () => {
        this.setState({
            iPhoneScreenPageDisplay: 'none',
            loginPageDisplay: 'block',
            topNavbarPageDisplay: 'none',
            bottomNavbarPageDisplay: 'none',
        })
    }
    
    loginButtonPress = () => {
        if(this.state.password == 'soccer') {
            this.setState({
                index: 0,
                loginPageDisplay: 'none',
                password: 'Password',
                topNavbarPageDisplay: 'block',
                gamePageDisplay: 'block',
                schedulePageDisplay: 'none',
                teamPageDisplay: 'none',
                statsPageDisplay: 'none',
                myProfilePageDisplay: 'none',
                bottomNavbarPageDisplay: 'block',
            })
        }
        else {
            alert('Wrong password. Please try again')
            this.setState({
                password: 'Password',
            })
        }
    }
    
    gamePagePress = () => {
        this.setState({
            index: 0,
            loginPageDisplay: 'none',
            topNavbarPageDisplay: 'block',
            gamePageDisplay: 'block',
            schedulePageDisplay: 'none',
            teamPageDisplay: 'none',
            playerStatsPageDisplay: 'none',
            statsPageDisplay: 'none',
            myProfilePageDisplay: 'none',
            bottomNavbarPageDisplay: 'block',
        })
    }
    
    schedulePagePress = () => {
        this.setState({
            index: 1, 
            topNavbarPageDisplay: 'block',
            gamePageDisplay: 'none',
            schedulePageDisplay: 'block',
            teamPageDisplay: 'none',
            playerStatsPageDisplay: 'none',
            statsPageDisplay: 'none',
            myProfilePageDisplay: 'none',
        })
    }
    
    teamPagePress = () => {
        this.setState({
            index: 2,
            topNavbarPageDisplay: 'block',
            gamePageDisplay: 'none',
            schedulePageDisplay: 'none',
            teamPageDisplay: 'block',
            playerStatsPageDisplay: 'none',
            statsPageDisplay: 'none',
            myProfilePageDisplay: 'none',
        })
    }
    
    statsPagePress = () => {
        this.setState({
            index: 3, 
            topNavbarPageDisplay: 'block',
            gamePageDisplay: 'none',
            schedulePageDisplay: 'none',
            teamPageDisplay: 'none',
            playerStatsPageDisplay: 'none',
            statsPageDisplay: 'block',
            myProfilePageDisplay: 'none',
        })
    }
    
    myProfilePagePress = () => {
        this.setState({
            topNavbarPageDisplay: 'none',
            gamePageDisplay: 'none',
            schedulePageDisplay: 'none',
            teamPageDisplay: 'none',
            playerStatsPageDisplay: 'none',
            statsPageDisplay: 'none',
            myProfilePageDisplay: 'block',
        })
    }
    
    logOutPagePress = () => {
        this.setState({
            index: 0,
            loginPageDisplay: 'block',
            username: 'Username or Email',
            topNavbarPageDisplay: 'none',
            gamePageDisplay: 'none',
            schedulePageDisplay: 'none',
            teamPageDisplay: 'none',
            statsPageDisplay: 'none',
            myProfilePageDisplay: 'none',
            bottomNavbarPageDisplay: 'none',
        })
        alert('You have successfully logged out!')
    }
    
    addHomeScore = () => {
        this.setState({
            homeScore: this.state.homeScore + 1

        })
        alert(this.state.goalFrom + ' scored off of a pass from ' + this.state.goalTo)
    }
    
    addAwayScore = () => {
        this.setState({
            awayScore: this.state.awayScore + 1

        })
    }
    
    pass = (success) => {
        if(success == 'yes') {
            this.setState({
                currPasses: this.state.currPasses + 1,
            })
        }
        else if(success == 'no') {
            if(this.state.currPasses > this.state.recordPasses) {
                this.setState({
                    recordPasses: this.state.currPasses
                })
            }
            this.setState({
                currPasses: 0
            })
            
        }
    }
    
    viewRoster = () => {
        this.setState({
            rosterPulldownDisplay: 'block',
        })
    }
    
    carded = (color) => {
        alert(this.state.fouler + ' has gotten a ' + color + ' card!')
    }
    
    submitScore = () => {
        
        if(this.state.homeScore > this.state.awayScore) {
            this.setState({
                teamStats: [this.state.teamStats[0] + 1, this.state.teamStats[1], this.state.teamStats[2]],
            })
        }
        else if(this.state.awayScore > this.state.homeScore) {
            this.setState({
                teamStats: [this.state.teamStats[0], this.state.teamStats[1] + 1, this.state.teamStats[2]],
            })
        }
        else if (this.state.homeScore == this.state.awayScore) {
            this.setState({
                teamStats: [this.state.teamStats[0], this.state.teamStats[1], this.state.teamStats[2] + 1],
            })
        }
        
        this.setState({
            totalGoalsFor: this.state.totalGoalsFor + this.state.homeScore,
            totalGoalsAgainst: this.state.totalGoalsAgainst + this.state.awayScore,
            homeScore: 0,
            awayScore: 0,
            
        })
    }
    
    showStats = (num) => {
        this.setState({
            statsIndex: num,
            topNavbarPageDisplay: 'none',
            gamePageDisplay: 'none',
            schedulePageDisplay: 'none',
            teamPageDisplay: 'none',
            playerStatsPageDisplay: 'block',
            statsPageDisplay: 'none',
            myProfilePageDisplay: 'none',
        })
    }
    
    changeTeamName = (name) => {
        this.setState({
            header: [this.state.header[0], this.state.header[1], name, this.state.header[3]],
        })
    }
    
    render() {
        return (
            <View style={styles.container}>
                <View style = {{display: this.state.iPhoneScreenPageDisplay}}>
                    <View style = {styles.contentContainer}>
                    
                        <ImageBackground
                            source = {{uri: 'https://media.idownloadblog.com/wp-content/uploads/2016/05/Reset-iOS-home-screen-layout.png'}}
                            style = {styles.background}
                        >
                            <TouchableHighlight
                                onPress = {this.iconPagePress}
                                style = {styles.appArea}
                            >
                                <View>
                                    <Image
                                        source = {{uri: 'https://codehs.com/uploads/4ab0e5f6e1a44a573f8b5d4a05d2de61'}}
                                        style = {styles.appIcon}
                                    ></Image>
                                    
                                    <Text style = {styles.appName}>
                                        STrak
                                    </Text>
                                </View>
                            </TouchableHighlight>
                            
                        </ImageBackground>
                    </View>
                </View>
                
                <View style = {{display: this.state.loginPageDisplay}}>
                    <View style = {styles.contentContainer}>
                        <View style = {styles.loginTitleBox}>
                            <Text style = {styles.loginTitleText}>
                                STrak
                            </Text>
                        </View>
                        
                        <View style = {styles.loginInputArea}>
                            <TextInput style = {styles.loginInputBoxes}
                            onChangeText = {(username) => this.setState({username})}
                            value = {this.state.username}
                            />
                            
                            <TextInput style = {styles.loginInputBoxes}
                            onChangeText = {(password) => this.setState({password})}
                            value = {this.state.password}
                            />
                            
                        </View>
                        
                        <View style = {styles.loginButtonArea}>
                            <View style = {styles.loginForgotPassword}>
                                <TouchableHighlight
                                    onPress ={() => {
                                        alert('An email will be sent to your account to reset your password')
                                    }}
                                >
                                    <Text style = {styles.loginForgotPasswordText}>
                                        I forgot my password
                                    </Text>
                                </TouchableHighlight>
                            </View>
                            
                            <TouchableHighlight
                                onPress = {this.loginButtonPress} 
                                style = {styles.loginButtonBoxes}
                            >
                                <Text style = {styles.loginButtonText}>
                                    Log In
                                </Text>
                            </TouchableHighlight>
                            
                            <View style = {styles.loginButtonBoxes}>
                                <Text style = {styles.loginButtonText}>
                                    I don't have an account
                                </Text>
                            </View>
                        </View>
                    
                    </View>
                </View>
                
                {/*Top Navbar*/}
                <View style = {{display: this.state.topNavbarPageDisplay}}>
                    <View style = {styles.navbar}>
                        <Text style = {styles.tNavbarText}>
                            {this.state.header[this.state.index]}
                        </Text>
                    </View>
                </View>
                
                {/*Middle Section*/}
                {/*Game Tab Page*/}
                <View style = {{display: this.state.gamePageDisplay}}>
                    <View style = {styles.appContentContainer}>
                        <View style = {[styles.gpUpperContainer, styles.row]}>
                            <View style = {styles.gpUpperScoreArea}>
                                <View style = {styles.gpScoreBox}>
                                    <Text style = {styles.gpScoreText}>
                                        {this.state.homeScore}
                                    </Text>
                                </View>
                                
                                <Text style = {styles.gpTeamNameText}>
                                    {this.state.homeTeam}
                                </Text>
                            </View>
                            
                            {/*Upper Part of Game Page (Score Area)*/}
                            <View style = {styles.gpUpperMiddle}>
                                <Text style = {styles.gpUpperMiddleText}>
                                    VS
                                </Text>
                            </View>
                            
                            <View style = {styles.gpUpperScoreArea}>
                                <View style = {styles.gpScoreBox}>
                                    <Text style = {styles.gpScoreText}>
                                        {this.state.awayScore}
                                    </Text>
                                </View>
                                
                                <Text style = {styles.gpTeamNameText}>
                                    {this.state.awayTeam}
                                </Text>
                            </View>
                        </View>
                        
                        {/*Lower Part of Game Page (Recording Area)*/}
                        <View style = {styles.gpLowerContainer}>
                            {/*Passes Count & Opp. Score Row*/}
                            <View style = {[styles.gpLowerPassArea, styles.row]}>
                                {/*Pass Box*/}
                                <View style = {[styles.gpLowerPassBox, styles.row]}>
                                    <TouchableHighlight
                                        onPress = {() => this.pass('yes')}
                                    >
                                        <Text style = {styles.gpLowerPassText}>
                                            Pass
                                        </Text>
                                    </TouchableHighlight>
                                    
                                    <Text style = {styles.gpNumPassText}>
                                        {this.state.currPasses}
                                    </Text>
                                    
                                    <Text style = {styles.gpNumPassText}>
                                        {this.state.recordPasses}
                                    </Text>
                                    
                                    <TouchableHighlight
                                        onPress = {() => this.pass('no')}
                                    >
                                        <Text style = {styles.gpLowerPassText}>
                                            Stop
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                
                                <TouchableHighlight
                                    onPress = {this.addAwayScore}
                                    style = {styles.gpLowerPassBox}
                                >
                                    <Text style = {styles.gpLowerPassText}>
                                        Opp. Goal
                                    </Text>
                                </TouchableHighlight>
                            </View>
                            
                            {/*Goal Area*/}
                            <View style = {[styles.gpLowerGoalArea, styles.row]}>
                                {/*Goal Left Section*/}
                                <View style = {styles.gpLowerBoxes}>
                                    <Text style = {styles.gpLowerGoalLeftText}>
                                        GOAL
                                    </Text>
                                </View>
                                
                                {/*Goal Middle Section*/}
                                <View style = {styles.gpLowerBoxes}>
                                    <TouchableHighlight
                                        onPress = {this.viewRoster}
                                    >
                                        <Text style = {styles.gpLowerMiddleText}>
                                            {this.state.goalFrom} ⏷
                                        </Text>
                                    </TouchableHighlight>
                                    
                                    <Text style = {styles.gpLowerGoalMiddleFromText}>
                                        FROM
                                    </Text>
                                    
                                    <TouchableHighlight
                                        onPress = {this.viewRoster}
                                    >
                                        <Text style = {styles.gpLowerMiddleText}>
                                            {this.state.goalTo} ⏷
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                
                                {/*Goal Right Section*/}
                                <View style = {styles.gpLowerBoxes}>
                                    <TouchableHighlight
                                        onPress = {this.addHomeScore}
                                        style = {styles.gpLowerGoalRightBox}
                                    >
                                        <Text style = {styles.gpLowerGoalRightText}>
                                            Enter
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                
                                <View style = {{display: this.state.rosterPulldownDisplay}}>
                                    <View style = {{backgroundColor: 'purple', height: 50, width: 50}}>
                                        <Text>
                                            DropDown
                                        </Text>
                                    </View>
                                </View>
                                    
                            </View>
                            
                            
                            
                            {/*Foul Area*/}
                            <View style = {[styles.gpLowerFoulArea, styles.row]}>
                                {/*Foul Left Section*/}
                                <View style = {styles.gpLowerBoxes}>
                                    <Text style = {styles.gpLowerGoalLeftText}>
                                        FOUL
                                    </Text>
                                </View>
                                
                                {/*Foul Middle Section*/}
                                <View style = {styles.gpLowerBoxes}>
                                    <TouchableHighlight
                                        onPress = {this.viewRoster}
                                    >
                                        <Text style = {styles.gpLowerMiddleText}>
                                            {this.state.fouler} ⏷
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                
                                {/*Foul Right Section*/}
                                <View style = {styles.gpLowerBoxes}>
                                    {/*Add cards to player stats*/}
                                    <TouchableHighlight
                                        onPress = {() => this.carded('yellow')}
                                        style = {{backgroundColor: 'yellow', marginBottom: 5}}
                                    >
                                        <Text style = {styles.gpLowerFoulCardText}>
                                            Caution
                                        </Text>
                                    </TouchableHighlight>
                                    
                                    <TouchableHighlight
                                        onPress = {() => this.carded('red')}
                                        style = {{backgroundColor: 'red'}}
                                    >
                                        <Text style = {styles.gpLowerFoulCardText}>
                                            Expulsion
                                        </Text>
                                    </TouchableHighlight>
                                </View>
                                
                            </View>
                            
                            {/*Submit Area*/}
                            <View style = {styles.gpSubmitGameArea}>
                                <TouchableHighlight
                                    onPress = {this.submitScore}
                                    style = {styles.gpSubmitGameBox}
                                >
                                    <Text style = {styles.gpSubmitGameText}>
                                        Submit Game Stats
                                    </Text>
                                </TouchableHighlight>
                            </View>
                            
                        </View>
                        
                    </View>
                    
                </View>
                
                {/*Schedule Tab Page*/}
                <View style = {{display: this.state.schedulePageDisplay}}>
                    <View style = {styles.appContentContainer}>
                        <ScrollView>
                            {this.state.games.map((game) => (
                                <View style = {styles.spGameRow}>
                                    <View style = {styles.spDateArea}>
                                        <View style = {styles.spDateBox}>
                                            <Text style = {styles.spDateText}>
                                                {game.date}
                                            </Text>
                                        </View>
                                    </View>
                                    
                                    <View style = {styles.spTimeBox}>
                                        <Text style = {styles.spText}>
                                            {game.time}
                                        </Text>
                                        
                                        <Text style = {styles.spOppText}>
                                            VS {game.opp}
                                        </Text>
                                        
                                        <Text stlye = {styles.spText}>
                                            @{game.location}
                                        </Text>
                                    </View>
                                    
                                    <View style = {styles.spResultBox}>
                                        <Text style = {styles.spResultText}>
                                            {game.result}
                                        </Text>
                                        
                                        <Text style = {styles.spText}>
                                            {game.home} - {game.away}
                                        </Text>
                                    </View>
                                    
                                </View>
                            ))}
                        </ScrollView>
                    </View>
                </View>
                
                {/*Team Tab Page*/}
                <View style = {{display: this.state.teamPageDisplay}}>
                    <View style = {styles.appContentContainer}>
                        {/*Team Name*/}
                        <View style = {styles.rpTitleArea}>
                            <Text style = {styles.rpTeamTitleText}>
                                Coach: Rob Esposito {'\n'}
                                Ass. Coach: Steve Bavardi {'\n'}
                                Manager: Christine Perez
                            </Text>
                        </View>
                        
                        {/*Titles (Image, number, name)*/}
                        <View style = {styles.rpArea}>
                            <View style = {styles.rpRosterRow}>
                                <View style = {styles.rpRosterImage}>
                                    <Text style = {styles.rpRosterText}>
                                        Image
                                    </Text>
                                </View>
                                
                                <View style = {styles.rpRosterNum}>
                                    <Text style = {styles.rpRosterText}>
                                        #
                                    </Text>
                                
                                </View>
                                
                                <View style = {styles.rpRosterName}>
                                    <Text style = {styles.rpRosterText}>
                                        Name
                                    </Text>
                                </View>
                                
                            </View>
                            
                            {/*Players In ScrollView*/}
                            <ScrollView>
                                {this.state.roster.map((player) => (
                                    <View style = {styles.rpPlayerRow}>
                                        <View style = {styles.rpRosterImage}>
                                            <Image
                                                source = {player.picture}
                                                style = {styles.rpPlayerPicture}
                                            />
                                        </View>
                                        
                                        <View style = {styles.rpRosterNum}>
                                            <Text style = {styles.rpPlayerInfoText}>
                                                {player.num}
                                            </Text>
                                        </View>
                                        
                                        <View style = {styles.rpRosterName}>
                                            <Text style = {styles.rpPlayerInfoText}>
                                                {player.name}
                                            </Text>
                                        </View>
                                        
                                        <View style = {styles.rpRosterStatsBox}>
                                            {/*Open page for player stats*/}
                                            <TouchableHighlight
                                                onPress = {() => this.showStats(player.index)}
                                            >
                                                <Text style = {styles.rpRosterStatsText}>
                                                    Stats
                                                </Text>
                                            </TouchableHighlight>
                                        </View>
                                    </View>
                                ))}
                            </ScrollView>
                        </View>
                        
                    </View>
                    
                </View>
                
                {/*Player Stats Page*/}
                <View style = {{display: this.state.playerStatsPageDisplay}}>
                    <View style = {styles.navbar}>
                        <Text style = {styles.tNavbarText}>
                            {this.state.roster[this.state.statsIndex].position}
                        </Text>
                    </View>
                    
                    <View style = {styles.appContentContainer}>
                        {/*Position Row*/}
                        <View style = {styles.psPositionRow}>
                            <Image
                                source = {this.state.roster[this.state.statsIndex].picture}
                                style = {{height: 100, width: 100, borderColor: '#add8e6', borderWidth: 1, borderStyle: 'double'}}
                            />
                            
                            <View style = {styles.row}>
                                <View style = {{alignItems: 'center',}}>
                                    <Text style = {styles.psTitleText}>
                                        {this.state.roster[this.state.statsIndex].name}
                                    </Text>
                                </View>
                            </View>
                        </View>
                        
                        {/*Goals Row*/}
                        <View style = {[styles.psGoalsRow, styles.row]}>
                            <View style = {styles.psTitleArea}>
                                <Text style = {styles.psTitleText}>
                                    GOALS
                                </Text>
                            </View>
                            
                            <View>
                                <Text style = {{fontSize: 20}}>
                                    {this.state.roster[this.state.statsIndex].goals}
                                </Text>
                            </View>
                        </View>
                        
                        {/*Assists Row*/}
                        <View style = {[styles.psFlexOneRow, styles.row]}>
                            <View style = {styles.psTitleArea}>
                                <Text style = {styles.psTitleText}>
                                    ASSISTS
                                </Text>
                            </View>
                            
                            <View>
                                <Text style = {{fontSize: 20}}>
                                    {this.state.roster[this.state.statsIndex].assists}
                                </Text>
                            </View>
                        </View>
                        
                        {/*Fouls Row*/}
                        <View style = {[styles.psFoulsRow, styles.row]}>
                            <View style = {styles.psFoulsTitleArea}>
                                <Text style = {styles.psTitleText}>
                                    FOULS
                                </Text>
                            </View>
                            
                            <View style = {{width: deviceWidth / 2}}>
                                <Text style = {{color: 'yellow', fontSize: 22, marginTop: 30,}}>
                                    Yellow
                                </Text>
                                
                                <Text style = {{color: 'red', fontSize: 22, marginTop: 30,}}>
                                    Red
                                </Text>
                            </View>
                            
                            <View style = {{width: deviceWidth / 4}}>
                                <Text style = {{fontSize: 20, marginTop: 30,}}>
                                    {this.state.roster[this.state.statsIndex].yellowCard}
                                </Text>
                                
                                <Text style = {{fontSize: 20, marginTop: 30,}}>
                                    {this.state.roster[this.state.statsIndex].redCard}
                                </Text>
                            </View>
                        </View>
                        
                        {/*Average Playing Time Row*/}
                        <View style = {[styles.psFlexOneRow, styles.row]}>
                            <View style = {{width: deviceWidth / 1.5}}>
                                <Text style = {styles.psTitleText}>
                                    AVG. PLAYTIME
                                </Text>
                            </View>
                            
                            <View>
                                <Text style = {{fontSize: 20}}>
                                    {this.state.roster[this.state.statsIndex].playtime} mins
                                </Text>
                            </View>
                        </View>
                        
                    </View>
                </View>
                
                {/*Stats Tab Page*/}
                <View style = {{display: this.state.statsPageDisplay}}>
                    <View style = {styles.appContentContainer}>
                        {/*W, L, T*/}
                        <View style = {[styles.stpStatsRow, styles.row]}>
                            <Text style = {styles.stpStatsText}>
                                {this.state.teamStats[0]} - {this.state.teamStats[1]} - {this.state.teamStats[2]}
                            </Text>
                        </View>
                        
                        {/*Goals For/Against Row*/}
                        <View style = {[styles.stpGoalsRow, styles.row]}>
                            <View style = {styles.stpGoalsTitleBox}>
                                <Text style = {styles.stpTitleText}>
                                    GOALS
                                </Text>
                            </View>
                            
                            <View style = {styles.stpGoalsSubtitleBox}>
                                <Text style = {styles.stpGoalsSubtitleText}>
                                    FOR:
                                </Text>
                                
                                <Text style = {styles.stpGoalsSubtitleText}>
                                    AGAINST: 
                                </Text>
                            </View>
                            
                            <View style = {styles.stpGoalsNumBox}>
                                <Text style = {styles.stpGoalsNumText}>
                                    {this.state.totalGoalsFor}
                                </Text>
                                
                                <Text style = {styles.stpGoalsNumText}>
                                    {this.state.totalGoalsAgainst}
                                </Text>
                            </View>
                        </View>
                        
                        {/*String of Passes*/}
                        <View style = {[styles.stpPassesRow, styles.row]}>
                            <Text style = {styles.stpTitleText}>
                                STRING OF PASSES:
                            </Text>
                            
                            <View style = {styles.stpPassesNumBox}>
                                <Text style = {styles.stpPassesNumText}>
                                    {this.state.recordPasses}
                                </Text>
                            </View>
                                
                        </View>
                        
                        {/*Top Scorer*/}
                        <View style = {[styles.stpScorerRow, styles.row]}>
                            <Text style = {styles.stpTitleText}>
                                TOP SCORER: 
                            </Text>
                            
                            <View style = {styles.stpPersonBox}>
                                <Text style = {styles.stpPersonText}>
                                    {this.state.topScorer}
                                </Text>
                            </View>
                                
                        </View>
                        
                    </View>
                    
                </View>
                
                {/*My Profile Tab Page*/}
                <View style = {{display: this.state.myProfilePageDisplay}}>
                    <View style = {styles.navbar}>
                        <TouchableHighlight
                            onPress = {this.logOutPagePress}
                        >
                            <Text style = {styles.tNavbarText}>
                                {this.state.username} ⮟
                            </Text>
                        </TouchableHighlight>
                    </View>
                    
                    <View style = {styles.appContentContainer}>
                        {/*Upper Part of Team Name Change (Coach)*/}
                        <View style = {[styles.ppUpperContainer, styles.row]}>
                            <View style = {styles.ppUpperLeftBox}>
                                <Image
                                    source = {{uri:'https://img.huffingtonpost.com/asset/5cd6fc552100003500c8add5.jpeg?ops=1778_1000'}}
                                    style = {{height: 100, width: 100, borderRadius: 50, borderColor: 'black', borderWidth: 2}}
                                />
                            </View>
                            
                            <View style = {styles.ppUpperRightBox}>
                                <Text style = {styles.ppUpperRightName}>
                                    Name: Rob Esposito
                                </Text>
                                
                                <Text style = {styles.ppUpperRightPosition}>
                                    Position: Head Coach
                                </Text>
                            </View>
                        </View>
                        
                        {/*Lower Part of My Profile Page (Team Name Change)*/}
                        <View style = {styles.ppLowerContainer}>
                            <Text style = {styles.ppLowerTitle}>
                                Team Name
                            </Text>
                            
                            <View style = {styles.ppLowerTypeBox}>
                                <TextInput style = {styles.ppLowerChangeTeamText}
                                onChangeText = {(homeTeam) => this.setState({homeTeam})}
                                value = {this.state.homeTeam}
                                />
                            </View>
                            
                            <View style = {styles.ppLowerChangeBox}>
                                <TouchableHighlight
                                    onPress = {() => this.changeTeamName(this.state.homeTeam)}
                                >
                                    <Text style = {styles.ppLowerChangeText}>
                                        Change
                                    </Text>
                                </TouchableHighlight>
                            </View>
                        </View>
                        
                    </View>
                    
                </View>
                
                {/*Bottom Navbar*/}
                <View style = {{display: this.state.bottomNavbarPageDisplay}}>
                    <View style = {styles.navbar}>
                            
                        <TouchableHighlight
                            onPress = {this.gamePagePress}
                            style = {styles.bNavbarButton}
                        >
                            <View style = {styles.buttonContainer}>
                                <Image
                                    source = {{uri: 'https://image.flaticon.com/icons/png/512/53/53283.png'}}
                                    style = {styles.bottomImage}
                                />
                                
                                <Text style = {styles.bottomTitle}>
                                    Game
                                </Text>
                            </View>
                        </TouchableHighlight>
                        
                        <TouchableHighlight
                            onPress = {this.schedulePagePress}
                            style = {styles.bNavbarButton}
                        >
                            <View style = {styles.buttonContainer}>
                                <Image
                                    source = {{uri: 'https://static.thenounproject.com/png/252730-200.png'}}
                                    style = {styles.bottomImage}
                                />
                                
                                <Text style = {styles.bottomTitle}>
                                    Schedule
                                </Text>
                            </View>
                        </TouchableHighlight>
                        
                        <TouchableHighlight
                            onPress = {this.teamPagePress}
                            style = {styles.bNavbarButton}
                        >
                            <View style = {styles.buttonContainer}>
                                <Image
                                    source = {{uri: 'http://cdn.onlinewebfonts.com/svg/img_303464.png'}}
                                    style = {styles.bottomImage}
                                />
                                
                                <Text style = {styles.bottomTitle}>
                                    Team
                                </Text>
                            </View>
                        </TouchableHighlight>
                        
                        <TouchableHighlight
                            onPress = {this.statsPagePress}
                            style = {styles.bNavbarButton}
                        >
                            <View style = {styles.buttonContainer}>
                                <Image
                                    source = {{uri: 'http://icon-library.com/images/statistics-icon/statistics-icon-0.jpg'}}
                                    style = {styles.bottomImage}
                                />
                                
                                <Text style = {styles.bottomTitle}>
                                    Stats
                                </Text>
                            </View>
                        </TouchableHighlight>
                        
                        <TouchableHighlight
                            onPress = {this.myProfilePagePress}
                            style = {styles.bNavbarButton}
                        >
                            <View style = {styles.buttonContainer}>
                                <Image
                                    source = {{uri: 'https://codehs.com/uploads/907dcbbb96c7b000400287cbecfd6636'}}
                                    style = {styles.bottomImage}
                                />
                                
                                <Text style = {styles.bottomTitle}>
                                    My Profile
                                </Text>
                            </View>
                        </TouchableHighlight>
                            
                        
                    </View>
                </View>
                
                
            </View>
        );
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1,
    },
    
    contentContainer: {
        backgroundColor: '#add8e6',
        height: deviceHeight,
        width: deviceWidth,
    },
    
    row: {
        flexDirection: 'row',
    },
    
    background: {
        height: deviceHeight,
        width: deviceWidth,
    },
    
    //Phone Home Screen Styles
    appArea: {
        height: deviceHeight / 7,
        width: deviceWidth / 4,
        alignItems: 'center',
        marginLeft: deviceWidth / 2 - 3,
        marginTop: deviceHeight / 3 * 2 + 1,
    },
    
    appIcon: {
        height: deviceWidth / 5,
        width: deviceWidth / 5,
    },
    
    //Login Page
    appName: {
        color: 'white',
        textAlign: 'center',
        fontSize: 10.5,
        fontFamily: 'helvetica',
        marginTop: 2,
    },
    
    loginTitleBox: {
        height: deviceHeight / 3,
        alignItems: 'center',
        justifyContent: 'flex-end',
    },
    
    loginTitleText: {
        fontSize: 40,
        textDecorationLine: 'underline',
    },
    
    loginInputArea: {
        height: deviceHeight / 6,
        alignItems: 'center',
        justifyContent: 'flex-end',
    },
    
    loginInputBoxes: {
        backgroundColor: 'white',
        height: 25,
        width: deviceWidth / 1.5,
        borderColor: 'black',
        borderWidth: 2,
        marginTop: 5,
        paddingLeft: 3,
    },
    
    loginButtonArea: {
        alignItems: 'center',
    },
    
    loginButtonBoxes: {
        backgroundColor: 'white',
        height: 30,
        width: deviceWidth / 1.8,
        alignItems: 'center',
        justifyContent: 'center',
        borderColor: 'black',
        borderWidth: 2,
        marginTop: 10,
    },
    
    loginButtonText: {
        color: 'black',
    },
    
    loginForgotPassword: {
        borderColor: 'black',
        borderBottomWidth: 1,
        marginTop: 10,
        marginBottom: 10,
    },
    
    
    //Start of App itself
    appContentContainer: {
        height: deviceHeight / 5 * 4,
    },
    
    navbar: {
        backgroundColor: '#add8e6',
        flexDirection: 'row',
        height: deviceHeight / 10,
        width: deviceWidth,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    tNavbarText: {
        color: 'white',
        fontSize: 18,
        fontWeight: 'bold',
        textDecorationLine: 'underline',
    },
    
    //Game Page Styles
    //Game Page Upper Area
    gpUpperContainer: {
        flex: 1,
    },
    
    gpUpperScoreArea: {
        width: deviceWidth / 2.2,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    gpScoreBox: {
        height: 90,
        width: 90,
        alignItems: 'center',
        justifyContent: 'center',
        borderColor: 'black',
        borderWidth: 2,
    },
    
    gpScoreText: {
        fontSize: 36,
    },
    
    gpTeamNameText: {
        fontSize: 24,
    },
    
    gpUpperMiddle: {
        justifyContent: 'flex-end',
    },
    
    gpUpperMiddleText: {
        fontSize: 20,
        paddingBottom: 15,
    },
    
    gpLowerContainer: {
        flex: 2, 
    },
    
    //Game Page Lower Area
    
    //Game Page Lower Area Row1
    gpLowerPassArea: {
        flex: 1,
        borderColor: 'black',
        borderTopWidth: 1,
        borderBottomWidth: 1,
    },
    
    gpLowerPassBox: {
        width: deviceWidth / 2,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    gpLowerPassText: {
        fontSize: 16,
        fontWeight: 'bold',
        margin: 5,
        textDecorationLine: 'underline',
    },
    
    gpNumPassText: {
        fontWeight: 'bold',
        margin: 5,
    },
    
    //Game Page Lower Area Goal Row
    gpLowerGoalArea: {
        flex: 2,
        borderColor: 'black',
        borderBottomWidth: 1,
    },
    
    gpLowerBoxes: {
        width: deviceWidth / 3,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    gpLowerGoalLeftText: {
        fontSize: 20,
        fontWeight: 'bold',
    },
    
    gpLowerMiddleText: {
        fontSize: 18,
    },
    
    gpLowerGoalMiddleFromText: {
        fontSize: 16,
        fontWeight: 'bold',
        margin: 8,
    },
    
    gpLowerGoalRightBox: {
        backgroundColor: 'black',
    },
    
    gpLowerGoalRightText: {
        color: 'white',
        fontSize: 20,
        padding: 5,
    },
    
    //Game Page Lower Area Foul Row
    gpLowerFoulArea: {
        flex: 2,
        borderColor: 'black',
        borderBottomWidth: 1,
    },
    
    gpLowerFoulCardText: {
        fontSize: 18,
        padding: 3,
        marginBottom: 5,
    },
    
    //Game Page Submit Row
    gpSubmitGameArea: {
        flex: 1,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    gpSubmitGameBox: {
        backgroundColor: 'black',
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    gpSubmitGameText: {
        color:'white',
        padding: 10,
    },
    
    //Schedule Page Styles
    //Game Row
    spGameRow: {
        flexDirection: 'row',
        height: deviceHeight / 7.5,
        borderColor: '#add8e6',
        borderBottomWidth: 1,
    },
    
    //Date Box
    spDateArea: {
        width: deviceWidth / 4,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    spDateBox: {
        height: deviceHeight / 9,
        width: deviceHeight / 9,
        borderColor: '#add8e6',
        borderWidth: 1,
        borderRadius: 10,
    },
    
    spDateText: {
        fontSize: 22,
        textAlign: 'center',
        padding: 5,
    },
    
    //Info Box
    spTimeBox: {
        width: deviceWidth / 2,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    spText: {
        fontSize: 16,
    },
    
    spOppText: {
        fontSize: 16,
        fontWeight: 'bold',
        margin: 3,
    },
    
    //Results Box
    spResultBox: {
        width: deviceWidth / 4,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    spResultText: {
        fontSize: 18,
    },
    
    //Team Page Styles
    //Title(Home Roster)
    rpTitleArea: {
        backgroundColor: '#add8e6',
        height: deviceHeight / 8,
        justifyContent: 'center',
        borderColor: 'white',
        borderTopWidth: 1,
    },
    
    rpTeamTitleText: {
        color: 'black',
        fontSize: 18,
        padding: 10,
        textDecorationLine: 'underline',
    },
    
    //Roster Title Row
    rpArea: {
        height: deviceHeight / 1.5
    },
    
    rpRosterRow: {
        flexDirection: 'row',
        backgroundColor: 'lightgrey',
        height: deviceHeight / 14,
        width: deviceWidth,
        alignItems: 'center',
    },
    
    rpRosterImage: {
        width: deviceWidth / 3.5,
        alignItems: 'center',
    },
    
    rpRosterNum: {
        width: deviceWidth / 8,
        alignItems: 'center',
    },
    
    rpRosterName: {
        width: deviceWidth / 2.5,
        alignItems: 'center',
    },
    
    rpRosterText: {
        color: 'white',
        fontSize: 22,
    },
    
    //Mapped out players
    rpPlayerRow: {
        flexDirection: 'row',
        height: deviceHeight / 7,
        width: deviceWidth,
        alignItems: 'center',
        justifyContent: 'center',
        borderColor: 'black',
        borderBottomWidth: 2,
    },
    
    rpPlayerPicture: {
        height: deviceHeight / 8,
        width: deviceWidth / 4,
        borderRadius: 50,
    },
    
    rpPlayerInfoText: {
        fontSize: 16,
        textAlign: 'center',
    },
    
    rpRosterStatsBox: {
        width: deviceHeight / 9,
        alignItems: 'center',
        textDecorationLine: 'underline',
    },
    
    rpRosterStatsText: {
        fontSize: 16,
        fontWeight: 'bold',
    },
    
    //Player Stats Page Styles
    psPositionRow: {
        flex: 2,
        alignItems: 'center',
        marginTop: 5,
    },
    
    psTitleArea: {
        width: deviceWidth / 4 * 3,
        marginLeft: 5,
    },
    
    psTitleText: {
        fontSize: 20,
        fontWeight: 'bold',
    },
    
    psGoalsRow: {
        flex: 1,
        alignItems: 'center',
    },
    
    psFlexOneRow: {
        flex: 1,
        marginTop: 15,
    },
    
    psFoulsRow: {
        flex: 2,
    },
    
    psFoulsTitleArea: {
        width: deviceWidth / 4,
        marginLeft: 5,
    },
    
    //Stats Page Styles
    //WLT
    stpStatsRow: {
        flex: 2,
        alignItems: 'center',
        justifyContent: 'center',
        borderColor: '#add8e6',
        borderBottomWidth: 2,
    },
    
    stpStatsText: {
        fontSize: 48,
    },
    
    //Goals
    stpGoalsRow: {
        flex: 2, 
        alignItems: 'center',
    },
    
    stpTitleText: {
        fontSize: 20,
        fontWeight: 'bold',
        margin: 10,
    },
    
    stpGoalsSubtitleBox: {
        width: deviceWidth / 2,
        justifyContent: 'center',
    },
    
    stpGoalsSubtitleText: {
        fontSize: 18,
        margin: 10,
    },
    
    stpGoalsNumBox: {
        alignItems: 'center',
        borderColor: '#add8e6',
        borderWidth: 1,
    },
    
    stpGoalsNumText: {
        fontSize: 24,
        margin: 10,
    },
    
    //Passes
    stpPassesRow: {
        flex: 1,
    },
    
    stpPassesNumBox: {
        height: 35,
        justifyContent: 'center',
        marginLeft: 40,
    },
    
    stpPassesNumText: {
        fontSize: 24,
    },
    
    //Top Scorer
    stpScorerRow: {
        flex: 1,
    },
    
    stpPersonBox: {
        height: 30,
        width: deviceWidth / 2,
        alignItems: 'center',
        justifyContent: 'center',
        borderColor: '#add8e6',
        borderWidth: 1,
        marginTop: 5,
    },
    
    stpPersonText: {
        fontSize: 20,
        padding: 10,
    },
    
    
    //My Profile Page Styles
    //Profile Page Upper Area
    ppUpperContainer: {
        height: deviceHeight / 5 * 1.5,
    },
    
    ppUpperLeftBox: {
        width: deviceWidth / 3,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    ppUpperRightBox: {
        width: deviceWidth / 3 * 2,
        alignItems: 'center',
        justifyContent: 'center',
    },
    
    ppUpperRightName: {
        fontSize: 20,
        fontWeight: 'bold',
    },
    
    ppUpperRightPosition: {
        fontSize: 20,
    },
    
    //Profile Page Lower Area
    ppLowerContainer: {
        height: deviceHeight / 2,
        alignItems: 'center',
    },
    
    ppLowerTitle: {
        fontSize: 22,
        fontWeight: 'bold',
    },
    
    ppLowerTypeBox: {
        borderWidth: 2,
        margin: 5,
    },
    
    ppLowerChangeTeamText: {
        fontSize: 20,
        padding: 5,
    },
    
    ppLowerChangeBox: {
        backgroundColor: 'black',
    },
    
    ppLowerChangeText: {
        color: 'white',
        fontSize: 18,
        padding: 10,
    },
    
    //Bottom Navbar Styles
    bNavbarButton: {
        height: deviceHeight / 10,
        width: deviceWidth / 5,
        borderColor: 'black',
        borderWidth: 1,
    },
    
    buttonContainer: {
        alignItems: 'center',
        justifyContent: 'center',
        paddingTop: 5,
    },
    
    bottomImage: {
        height: deviceWidth / 12,
        width: deviceWidth / 8.5,
        margin: 3,
    },
    
    bottomTitle: {
        fontSize: 12,
    },
    
});
